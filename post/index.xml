<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ONE Daily Snippet</title>
    <link>https://jmelis.github.io/one-daily-snippet/post/</link>
    <description>Recent content in Posts on ONE Daily Snippet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Aug 2016 13:05:11 +0200</lastBuildDate>
    <atom:link href="https://jmelis.github.io/one-daily-snippet/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>git</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/git/</link>
      <pubDate>Mon, 01 Aug 2016 13:05:11 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/git/</guid>
      <description>

&lt;p&gt;Some darn git commands I can never remember&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;delete-a-remote-tag-or-branch&#34;&gt;Delete a remote tag or branch&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git push origin --delete &amp;lt;tag or branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>libguestfs</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/libguestfs/</link>
      <pubDate>Mon, 01 Aug 2016 09:46:56 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/libguestfs/</guid>
      <description>

&lt;p&gt;This post is intended to be a guide to some common operations with libguestfs. It will be updated in the future again.&lt;/p&gt;

&lt;p&gt;Guestfish changes a lot. This guide has been checked for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;guestfish 1.33.12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure you read the man page, in particular the commands section to get the commands for your version.&lt;/p&gt;

&lt;h2 id=&#34;opening-a-qcow2-file&#34;&gt;Opening a qcow2 file&lt;/h2&gt;

&lt;p&gt;This is the most basic command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ guestfish -ia &amp;lt;file&amp;gt;.qcow2
Welcome to guestfish, the guest filesystem shell for
editing virtual machine filesystems and disk images.

Type: &#39;help&#39; for help on commands
      &#39;man&#39; to read the manual
      &#39;quit&#39; to quit the shell

Operating system: CentOS Linux release 7.2.1511 (Core)
/dev/sda3 mounted on /
/dev/sda1 mounted on /boot

&amp;gt;&amp;lt;fs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Use the &lt;code&gt;-i&lt;/code&gt; option to automatically mount the disks from a virtual machine.&lt;/li&gt;
&lt;li&gt;With &lt;code&gt;-a&lt;/code&gt; you can add a block device or virtual machine image to the shell.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;uploading-a-file&#34;&gt;Uploading a file&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;copy-in local [local ...] /remotedir&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;ls-l-anyone&#34;&gt;ls -l anyone?&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ll&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;setting-the-password&#34;&gt;Setting the password&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;virt-customize --format qcow2 -a &amp;lt;image&amp;gt; --root-password password:&amp;lt;pass&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;installing-a-package&#34;&gt;Installing a package&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;virt-customize --format vmdk -a &amp;lt;image&amp;gt; --install /path/to/deb/or/rpm&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>generate and deploy OVAs</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/generate-ova/</link>
      <pubDate>Fri, 29 Jul 2016 11:39:17 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/generate-ova/</guid>
      <description>&lt;p&gt;The sky is blue, the grass is green, and nobody likes the vCenter integration plugin. So let&amp;rsquo;s manage OVFs from the command line using &lt;a href=&#34;https://www.vmware.com/support/developer/ovf/&#34;&gt;ovftool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Creating an OVA:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ovftool &amp;quot;vi://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;/&amp;lt;path&amp;gt;/Datacenter/vm/vOneCloud-2.0.0-v5&amp;quot; myova.ova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Deploying an OVA:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ovftool -ds=&amp;lt;datastore&amp;gt; -n=&amp;quot;&amp;lt;VM Name&amp;gt;&amp;quot; myova.ova &amp;quot;vi://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;/&amp;lt;path&amp;gt;/Datacenter/host/Cluster&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ldapsearch</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/ldapsearch/</link>
      <pubDate>Fri, 29 Jul 2016 11:24:54 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/ldapsearch/</guid>
      <description>&lt;p&gt;If you want to query the ldap server use this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ldapsearch -x -h zentyal-1678 -D &amp;quot;Administrator@opennebula.org&amp;quot; -W -b &amp;quot;cn=users,dc=opennebula,dc=org&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>onepry</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/onepry/</link>
      <pubDate>Thu, 28 Jul 2016 10:47:17 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/onepry/</guid>
      <description>&lt;p&gt;We can fire up &lt;a href=&#34;https://github.com/pry/pry&#34;&gt;pry&lt;/a&gt; with the OpenNebula libraries to debug it more easily:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/ruby

ONE_LOCATION=ENV[&amp;quot;ONE_LOCATION&amp;quot;]

if !ONE_LOCATION
    RUBY_LIB_LOCATION=&amp;quot;/usr/lib/one/ruby&amp;quot;
    VAR_LOCATION = &amp;quot;/var/lib/one&amp;quot;
    LIB_LOCATION = &amp;quot;/usr/lib/one&amp;quot;
    ETC_LOCATION = &amp;quot;/etc/one&amp;quot;
else
    RUBY_LIB_LOCATION=ONE_LOCATION+&amp;quot;/lib/ruby&amp;quot;
    VAR_LOCATION = ONE_LOCATION+&amp;quot;/var&amp;quot;
    LIB_LOCATION = ONE_LOCATION+&amp;quot;/lib&amp;quot;
    ETC_LOCATION = ONE_LOCATION + &amp;quot;/etc&amp;quot;
end

$: &amp;lt;&amp;lt; RUBY_LIB_LOCATION
$: &amp;lt;&amp;lt; RUBY_LIB_LOCATION+&amp;quot;/cloud&amp;quot; # For the Repository Manager
$: &amp;lt;&amp;lt; RUBY_LIB_LOCATION+&amp;quot;/cli&amp;quot; # For the Repository Manager
$: &amp;lt;&amp;lt; LIB_LOCATION+&#39;/oneflow/lib&#39;

################################################
# Required libraries
################################################
require &#39;yaml&#39;
require &#39;erb&#39;
require &#39;tempfile&#39;
require &#39;fileutils&#39;
require &#39;json&#39;

require &#39;opennebula&#39;
include OpenNebula

require &#39;pp&#39;

@client = Client.new

module OpenNebula
    class XMLElement
        def self.from_xml(s)
            m = s.match(/^&amp;lt;(\w+)&amp;gt;/)
            root_element = m[1]

            elem = XMLElement.new
            elem.initialize_xml(s, root_element)
            return elem
        end
    end
end

version = &amp;quot;&amp;gt;= 0&amp;quot;
gem &#39;pry&#39;, version
load Gem.bin_path(&#39;pry&#39;, &#39;pry&#39;, version)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;$ onepry
[1] pry(main)&amp;gt; vm=VirtualMachine.new_with_id(114,@client);
[2] pry(main)&amp;gt; vm.info;
[3] pry(main)&amp;gt; vm[&#39;NAME&#39;]
=&amp;gt; &amp;quot;ha-0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(by adding &lt;strong&gt;;&lt;/strong&gt; to the commands the return object is not displayed. A tip within a tip, yo dawg.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>a better onevm list</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/a-better-onevm-list/</link>
      <pubDate>Thu, 28 Jul 2016 10:07:42 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/a-better-onevm-list/</guid>
      <description>&lt;p&gt;This is a more useful &lt;code&gt;onevm list&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias onevmll=&amp;quot;onevm list -l ID,NAME,IP,STAT --csv|sed 1d|column -ts,&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ onevmll
1673  sched-debug                    10.10.0.247   poff
2644  migrator-4.14.2.devel          10.10.0.37    runn
3480  ubuntu1404-upgrade-d1395.test  &amp;quot;10.10.0.108  192.168.150.2&amp;quot;  runn
3488  cangallo                       10.10.0.116   runn
4373  build-centos7-jaime.test       10.10.0.254   runn
5169  ubuntu1604-upgrade-cf116.test  &amp;quot;10.10.0.57   192.168.150.3&amp;quot;  runn
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ip to hex</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/ip-to-hex/</link>
      <pubDate>Thu, 28 Jul 2016 09:46:08 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/ip-to-hex/</guid>
      <description>&lt;p&gt;In order to convert MAC to IP and back, use the &lt;code&gt;ip_to_hex&lt;/code&gt; tool:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/env ruby

MAC_PREFIX = &amp;quot;02:00&amp;quot;

arg = ARGV[0]

if arg.include? &#39;:&#39;
    puts arg.split(&#39;:&#39;)[2..-1].collect{|i| i.to_i(16)}.join(&#39;.&#39;)
else
    mac = MAC_PREFIX + &#39;:&#39; + arg.split(&#39;.&#39;).collect{|i| sprintf(&amp;quot;%02X&amp;quot;,i)}.join(&#39;:&#39;)
    puts mac
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;➜  ~  ip_to_hex 192.168.0.10
02:00:C0:A8:00:0A
➜  ~  ip_to_hex 02:00:C0:A8:00:0A
192.168.0.10
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git prepare commit msg</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/git-prepare-commit-msg/</link>
      <pubDate>Thu, 28 Jul 2016 00:21:03 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/git-prepare-commit-msg/</guid>
      <description>&lt;p&gt;Forget about adding &lt;em&gt;feature #blablabla&lt;/em&gt; to every single commit! and it&amp;rsquo;s free!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh

BRANCH_NAME=$(git symbolic-ref --short HEAD)

if [[ $BRANCH_NAME != bug-* ]] &amp;amp;&amp;amp; [[ $BRANCH_NAME != feature-* ]]; then
    exit 0
fi

FIRST_LINE_COMMIT=$(head -n1 $1)

case $FIRST_LINE_COMMIT in
bug*|Bug*|feature*|Feature*)
    exit 0
    ;;
esac

LABEL=$(echo $BRANCH_NAME|sed &#39;s/-/ #/&#39;)
LABEL=${LABEL^}

sed -i -e &amp;quot;1s/^/${LABEL}: /&amp;quot; $1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>generate /etc/hosts</title>
      <link>https://jmelis.github.io/one-daily-snippet/post/generate-etc-hosts/</link>
      <pubDate>Wed, 27 Jul 2016 19:15:11 +0200</pubDate>
      
      <guid>https://jmelis.github.io/one-daily-snippet/post/generate-etc-hosts/</guid>
      <description>&lt;p&gt;If you ever need to generate quickly a snippet for &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;onevm list -l ID,NAME,IP,STAT --csv | sed 1d | column -ts, | tr -d &#39;&amp;quot;&#39; | awk &#39;{print $3, $2}&#39; | column -t
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;10.10.0.37   migrator-4.14.2.devel
10.10.0.108  ubuntu1404-upgrade-d1395.test
10.10.0.116  cangallo
10.10.0.254  build-centos7-jaime.test
10.10.0.57   ubuntu1604-upgrade-cf116.test
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>